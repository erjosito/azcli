
{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 14,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "deeeuadr7flz4b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 17,
        "x": 0,
        "y": 0
      },
      "id": 9,
      "options": {
        "basemap": {
          "config": {},
          "name": "Layer 0",
          "type": "default"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showMeasure": false,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "showLegend": true,
              "style": {
                "color": {
                  "fixed": "dark-green"
                },
                "opacity": 0.4,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "field": "FlowCount",
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "symbolAlign": {
                  "horizontal": "center",
                  "vertical": "center"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "location": {
              "lookup": "country_code",
              "mode": "lookup"
            },
            "name": "Src/Dst",
            "tooltip": true,
            "type": "markers"
          }
        ],
        "tooltip": {
          "mode": "details"
        },
        "view": {
          "allLayers": true,
          "id": "fit",
          "lat": 46,
          "lon": 14,
          "zoom": 15
        }
      },
      "pluginVersion": "10.4.15",
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": false,
            "query": "// Variables\r\nlet IPrangesStr = '${IPranges}';\r\nlet IPrangesDyn = parse_json(IPrangesStr);\r\n// Query\r\nNTANetAnalytics\r\n| where isnotempty(DestPublicIps) or isnotempty(SrcPublicIps)\r\n| project SrcIp, SrcPublicIps, DestIp, DestPublicIps\r\n// Standard format for DestPublicIp\r\n| extend DestPublicIpsList = split(DestPublicIps, ' ')\r\n| mv-expand DestPublicIpsList\r\n| extend DestPublicIp = tostring(split(DestPublicIpsList, '|')[0])\r\n// Standard format for SrcPublicIp\r\n| extend SrcPublicIpsList = split(SrcPublicIps, ' ')\r\n| mv-expand SrcPublicIpsList\r\n| extend SrcPublicIp = tostring(split(SrcPublicIpsList, '|')[0])\r\n// Filter by service tag if required0\r\n| extend FilterIPRangesBool = \"$FilterIPRanges\"\r\n| where (FilterIPRangesBool == \"No\") or ipv4_is_in_any_range(SrcPublicIp, IPrangesDyn) or ipv4_is_in_any_range(DestPublicIp, IPrangesDyn)\r\n// Enrich with location for src and dst\r\n| lookup kind=leftouter NTAIpDetails on $left.DestPublicIp==$right.Ip\r\n| lookup kind=leftouter NTAIpDetails on $left.SrcPublicIp==$right.Ip\r\n| extend Direction = iff(isempty(SrcIp), 'Inbound', 'Outbound')\r\n// Consolidate Location\r\n| extend country_code = iff(isnotempty(Location), Location, Location1) | project-away Location1\r\n// Summarize by country\r\n| where isnotempty(country_code)\r\n| summarize FlowCount=count() by country_code",
            "resources": [
              "/subscriptions/3e78e84b-6750-44b9-9d57-d9bba935237a/resourceGroups/flowlogs/providers/Microsoft.OperationalInsights/workspaces/log11797"
            ],
            "resultFormat": "logs"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "deeeuadr7flz4b"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Flow Count",
      "type": "geomap"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "deeeuadr7flz4b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 17,
        "y": 0
      },
      "id": 3,
      "options": {
        "displayLabels": [
          "name",
          "value"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": false,
            "query": "NTAIpDetails\r\n| where $__timeFilter(TimeGenerated)\r\n| where FlowType contains \"Malicious\"\r\n| summarize count() by ThreatType",
            "resources": [
              "/subscriptions/3e78e84b-6750-44b9-9d57-d9bba935237a/resourceGroups/flowlogs/providers/Microsoft.OperationalInsights/workspaces/log11797"
            ],
            "resultFormat": "logs"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "deeeuadr7flz4b"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Flows per threat type",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "deeeuadr7flz4b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 17,
        "y": 7
      },
      "id": 8,
      "options": {
        "displayLabels": [
          "value"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": false,
            "query": "// Variables\r\nlet IPrangesStr = '${IPranges}';\r\nlet IPrangesDyn = parse_json(IPrangesStr);\r\n// Query\r\nNTANetAnalytics\r\n| where $__timeFilter(TimeGenerated)\r\n// Consolidate destip and destpublicips\r\n| extend DestPublicIpsList = split(DestPublicIps, ' ')\r\n| mv-expand DestPublicIpsList\r\n| extend DestPublicIp = split(DestPublicIpsList, '|')[0]\r\n| where isnotempty(DestIp) or isnotempty(DestPublicIp)\r\n| extend DestIp = iff(isnotempty(DestIp), DestIp, DestPublicIp)\r\n// Filter by service tag if required0\r\n| extend FilterIPRangesBool = \"$FilterIPRanges\"\r\n| where (FilterIPRangesBool == \"No\") or ipv4_is_in_any_range(DestIp, IPrangesDyn)\r\n// Main query\r\n| where isnotempty(SrcSubnet) \r\n| project Bytes=BytesDestToSrc+BytesSrcToDest, SrcSubnet\r\n| summarize TotalBytes=sum(Bytes) by SrcSubnet\r\n| top $TopNumber by TotalBytes\r\n",
            "resources": [
              "/subscriptions/3e78e84b-6750-44b9-9d57-d9bba935237a/resourceGroups/flowlogs/providers/Microsoft.OperationalInsights/workspaces/log11797"
            ],
            "resultFormat": "logs"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "deeeuadr7flz4b"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Transferred bytes of top $TopNumber source subnets",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "deeeuadr7flz4b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 17,
        "x": 0,
        "y": 15
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": false,
            "query": "// Variables\r\nlet IPrangesStr = '${IPranges}';\r\nlet IPrangesDyn = parse_json(IPrangesStr);\r\n// Query\r\nNTANetAnalytics\r\n| where SubType == \"FlowLog\"\r\n| where FlowStatus == \"Allowed\"\r\n// Consolidate destip and destpublicips\r\n| extend DestPublicIpsList = split(DestPublicIps, ' ')\r\n| mv-expand DestPublicIpsList\r\n| extend DestPublicIp = split(DestPublicIpsList, '|')[0]\r\n| where isnotempty(DestIp) or isnotempty(DestPublicIp)\r\n| extend DestIp = iff(isnotempty(DestIp), DestIp, DestPublicIp)\r\n// Filter by service tag if required0\r\n| extend FilterIPRangesBool = \"$FilterIPRanges\"\r\n| where (FilterIPRangesBool == \"No\") or ipv4_is_in_any_range(DestIp, IPrangesDyn)\r\n// Main query\r\n| summarize BytesSrc2Dst=sum(BytesSrcToDest), BytesDst2Src=sum(BytesDestToSrc) by DestPort=tostring(DestPort), bin(TimeGenerated, 30m)\r\n",
            "resources": [
              "/subscriptions/3e78e84b-6750-44b9-9d57-d9bba935237a/resourceGroups/flowlogs/providers/Microsoft.OperationalInsights/workspaces/log11797"
            ],
            "resultFormat": "logs"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "deeeuadr7flz4b"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Transferred bytes by applications",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "deeeuadr7flz4b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 17,
        "y": 15
      },
      "id": 2,
      "options": {
        "displayLabels": [
          "value"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true,
          "values": []
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": false,
            "query": "// Variables\r\nlet IPrangesStr = '${IPranges}';\r\nlet IPrangesDyn = parse_json(IPrangesStr);\r\n// Query\r\nNTANetAnalytics\r\n| where $__timeFilter(TimeGenerated)\r\n| where SubType == \"FlowLog\"\r\n| where FlowStatus == \"Allowed\"\r\n// Consolidate destip and destpublicips\r\n| extend DestPublicIpsList = split(DestPublicIps, ' ')\r\n| mv-expand DestPublicIpsList\r\n| extend DestPublicIp = split(DestPublicIpsList, '|')[0]\r\n| where isnotempty(DestIp) or isnotempty(DestPublicIp)\r\n| extend DestIp = iff(isnotempty(DestIp), DestIp, DestPublicIp)\r\n// Filter by service tag if required0\r\n| extend FilterIPRangesBool = \"$FilterIPRanges\"\r\n| where (FilterIPRangesBool == \"No\") or ipv4_is_in_any_range(DestIp, IPrangesDyn)\r\n// Main query\r\n| project TotalBytes=BytesSrcToDest+BytesDestToSrc, Application=strcat(L4Protocol, tostring(DestPort))\r\n| summarize TotalBytes=sum(TotalBytes) by Application\r\n| top $TopNumber by TotalBytes\r\n",
            "resources": [
              "/subscriptions/3e78e84b-6750-44b9-9d57-d9bba935237a/resourceGroups/flowlogs/providers/Microsoft.OperationalInsights/workspaces/log11797"
            ],
            "resultFormat": "logs",
            "timeColumn": "TimeGenerated"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "deeeuadr7flz4b"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Transferred bytes by top $TopNumber Apps",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "deeeuadr7flz4b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 17,
        "x": 0,
        "y": 22
      },
      "id": 7,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": false,
            "query": "let IPrangesStr = '${IPranges}';\r\nlet IPrangesDyn = parse_json(IPrangesStr);\r\n//let IPranges = parse_json($IPranges);\r\nNTANetAnalytics\r\n| where $__timeFilter(TimeGenerated)\r\n// Consolidate destip and destpublicips\r\n| extend DestPublicIpsList = split(DestPublicIps, ' ')\r\n| mv-expand DestPublicIpsList\r\n| extend DestPublicIp = split(DestPublicIpsList, '|')[0]\r\n| where isnotempty(DestIp) or isnotempty(DestPublicIp)\r\n| extend DestIp = iff(isnotempty(DestIp), DestIp, DestPublicIp)\r\n| extend FilterIPRangesBool = \"$FilterIPRanges\"\r\n// Filter by service tag if required0\r\n| where (FilterIPRangesBool == \"No\") or ipv4_is_in_any_range(DestIp, IPrangesDyn)\r\n// Main query\r\n| project SrcVm, TotalBytes=BytesDestToSrc+BytesSrcToDest\r\n| where isnotempty(SrcVm)\r\n| summarize TotalBytes=sum(TotalBytes) by SrcVm\r\n| top $TopNumber by TotalBytes",
            "resources": [
              "/subscriptions/3e78e84b-6750-44b9-9d57-d9bba935237a/resourceGroups/flowlogs/providers/Microsoft.OperationalInsights/workspaces/log11797"
            ],
            "resultFormat": "logs"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "deeeuadr7flz4b"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Transferred bytes for top $TopNumber VMs",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "deeeuadr7flz4b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 17,
        "y": 22
      },
      "id": 6,
      "options": {
        "displayLabels": [
          "value",
          "name"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": false,
            "query": "// Variables\r\nlet IPrangesStr = '${IPranges}';\r\nlet IPrangesDyn = parse_json(IPrangesStr);\r\n// Query\r\nNTANetAnalytics\r\n| where $__timeFilter(TimeGenerated)\r\n// Consolidate destip and destpublicips\r\n| extend DestPublicIpsList = split(DestPublicIps, ' ')\r\n| mv-expand DestPublicIpsList\r\n| extend DestPublicIp = split(DestPublicIpsList, '|')[0]\r\n| where isnotempty(DestIp) or isnotempty(DestPublicIp)\r\n| extend DestIp = iff(isnotempty(DestIp), DestIp, DestPublicIp)\r\n// Filter by service tag if required0\r\n| extend FilterIPRangesBool = \"$FilterIPRanges\"\r\n| where (FilterIPRangesBool == \"No\") or ipv4_is_in_any_range(DestIp, IPrangesDyn)\r\n// Main query\r\n| mvexpand Region = pack_array(SrcRegion, DestRegion)\r\n| summarize num = count() by tostring(Region)\r\n| where isnotempty(Region)",
            "resources": [
              "/subscriptions/3e78e84b-6750-44b9-9d57-d9bba935237a/resourceGroups/flowlogs/providers/Microsoft.OperationalInsights/workspaces/log11797"
            ],
            "resultFormat": "logs"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "deeeuadr7flz4b"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Flows per region",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "deeeuadr7flz4b"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 23,
        "x": 0,
        "y": 30
      },
      "id": 4,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.4.15",
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": false,
            "query": "let MAliciousIps = NTAIpDetails \r\n| where FlowType == \"MaliciousFlow\" \r\n| where $__timeFilter(TimeGenerated)\r\n| project-away TimeGenerated, SubType, FaSchemaVersion, FlowIntervalEndTime, FlowIntervalStartTime, FlowType, Type \r\n| distinct *; \r\nlet MaliciousFlows =  NTANetAnalytics \r\n| where $__timeFilter(TimeGenerated)\r\n| where SubType == \"FlowLog\" and FlowType == \"MaliciousFlow\" \r\n| project SrcIp, DestIp, SrcSubnet, DestSubnet; \r\nlet SrcMalicious = MaliciousFlows \r\n| lookup kind=inner MAliciousIps on $left.SrcIp == $right.Ip \r\n| project Subnet = DestSubnet, MaliciousIp = SrcIp, PublicIpDetails, ThreatType, DnsDomain, ThreatDescription, Location, Url; \r\nlet DestMalicious = MaliciousFlows \r\n| lookup kind=inner MAliciousIps on $left.DestIp == $right.Ip \r\n| project Subnet = SrcSubnet, MaliciousIp = DestIp,  PublicIpDetails, ThreatType, DnsDomain, ThreatDescription, Location, Url; \r\nSrcMalicious \r\n| union DestMalicious\r\n| where Subnet != \"\"\r\n| summarize counterValue = count() by Subnet, MaliciousIp,  PublicIpDetails, ThreatType, Location, Url",
            "resources": [
              "/subscriptions/3e78e84b-6750-44b9-9d57-d9bba935237a/resourceGroups/flowlogs/providers/Microsoft.OperationalInsights/workspaces/log11797"
            ],
            "resultFormat": "logs"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "deeeuadr7flz4b"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Flows to malicious endpoints by subnets",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "deeeuadr7flz4b"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 23,
        "x": 0,
        "y": 37
      },
      "id": 5,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.4.15",
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": false,
            "query": "let MaliciousIps = NTAIpDetails \r\n    | where $__timeFilter(TimeGenerated)\r\n    | where FlowType == \"MaliciousFlow\" \r\n    | project-away\r\n        TimeGenerated,\r\n        SubType,\r\n        FaSchemaVersion,\r\n        FlowIntervalEndTime,\r\n        FlowIntervalStartTime,\r\n        FlowType,\r\n        Type \r\n    | distinct *;\r\nlet MaliciousFlows =  NTANetAnalytics \r\n    | where $__timeFilter(TimeGenerated)\r\n    | where SubType == \"FlowLog\" and FlowType == \"MaliciousFlow\" \r\n    | where iff(\"'*'\" == \"'*'\", true, (SrcSubscription in~ ('*') or DestSubscription in~ ('*')))\r\n    | project \r\n        SrcIp,\r\n        DestIp,\r\n        SrcVm,\r\n        DestVm,\r\n        SrcSubscription,\r\n        DestSubscription; \r\nlet SrcMalicious = MaliciousFlows \r\n    | lookup kind=inner MaliciousIps on $left.SrcIp == $right.Ip\r\n    | extend CompromisedVM = iff(isnotempty(DestVm), strcat(\"/subscriptions/\", DestSubscription, \"/resourceGroups/\", tostring(split(DestVm, \"/\")[0]), \"/providers/Microsoft.Compute/virtualMachines/\", tostring(split(DestVm, \"/\")[1])), '')\r\n    | project\r\n        CompromisedIp = strcat('🖥️', DestIp),\r\n        MaliciousIp = strcat('🌐 ', SrcIp),\r\n        CompromisedVM,\r\n        PublicIpDetails,\r\n        ThreatType,\r\n        DnsDomain,\r\n        ThreatDescription,\r\n        Location,\r\n        Url;\r\nlet DestMalicious = MaliciousFlows \r\n    | lookup kind=inner MaliciousIps on $left.DestIp == $right.Ip \r\n    | extend CompromisedVM = iff(isnotempty(SrcVm), strcat(\"/subscriptions/\", SrcSubscription, \"/resourceGroups/\", tostring(split(SrcVm, \"/\")[0]), \"/providers/Microsoft.Compute/virtualMachines/\", tostring(split(SrcVm, \"/\")[1])), '')\r\n    | project\r\n        CompromisedIp = strcat('🖥️ ', SrcIp),\r\n        MaliciousIp = strcat('🌐 ', DestIp),\r\n        CompromisedVM,\r\n        PublicIpDetails,\r\n        ThreatType,\r\n        DnsDomain,\r\n        ThreatDescription,\r\n        Location,\r\n        Url; \r\nSrcMalicious \r\n| union DestMalicious",
            "resources": [
              "/subscriptions/3e78e84b-6750-44b9-9d57-d9bba935237a/resourceGroups/flowlogs/providers/Microsoft.OperationalInsights/workspaces/log11797"
            ],
            "resultFormat": "logs"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "deeeuadr7flz4b"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Traffic to malicious endpoints by IP addresses",
      "type": "table"
    }
  ],
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "1",
          "value": "1"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Top values",
        "multi": false,
        "name": "TopNumber",
        "options": [
          {
            "selected": true,
            "text": "1",
            "value": "1"
          },
          {
            "selected": false,
            "text": "2",
            "value": "2"
          },
          {
            "selected": false,
            "text": "3",
            "value": "3"
          },
          {
            "selected": false,
            "text": "4",
            "value": "4"
          },
          {
            "selected": false,
            "text": "5",
            "value": "5"
          },
          {
            "selected": false,
            "text": "10",
            "value": "10"
          },
          {
            "selected": false,
            "text": "20",
            "value": "20"
          },
          {
            "selected": false,
            "text": "30",
            "value": "30"
          },
          {
            "selected": false,
            "text": "40",
            "value": "40"
          },
          {
            "selected": false,
            "text": "50",
            "value": "50"
          }
        ],
        "query": "1,2,3,4,5,10,20,30,40,50",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "No",
          "value": "No"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Filter IP ranges",
        "multi": false,
        "name": "FilterIPRanges",
        "options": [
          {
            "selected": false,
            "text": "Yes",
            "value": "Yes"
          },
          {
            "selected": true,
            "text": "No",
            "value": "No"
          }
        ],
        "query": "Yes,No",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "ActionGroup",
          "value": "[\"4.145.74.52/30\",\"4.149.254.68/30\",\"4.150.239.212/30\",\"4.151.103.92/30\",\"4.171.31.152/30\",\"4.190.136.180/30\",\"4.200.251.84/30\",\"4.202.253.100/30\",\"4.206.229.96/30\",\"4.207.242.64/30\",\"4.216.204.200/30\",\"4.218.236.160/30\",\"4.219.249.220/30\",\"4.220.138.104/30\",\"4.232.48.104/30\",\"4.232.106.88/30\",\"4.240.148.92/30\",\"4.243.28.116/30\",\"4.248.83.192/30\",\"9.160.80.24/30\",\"9.205.75.32/30\",\"13.66.143.220/30\",\"13.67.10.124/30\",\"13.69.109.132/30\",\"13.71.199.112/30\",\"13.77.53.216/30\",\"13.78.109.156/30\",\"13.86.221.220/30\",\"13.106.38.142/32\",\"13.106.38.148/32\",\"13.106.54.3/32\",\"13.106.54.19/32\",\"13.106.57.181/32\",\"13.106.57.196/31\",\"20.7.239.202/32\",\"20.10.122.64/32\",\"20.17.63.212/30\",\"20.17.66.88/30\",\"20.17.124.64/30\",\"20.17.130.24/30\",\"20.21.42.88/30\",\"20.38.133.4/30\",\"20.38.149.132/30\",\"20.42.64.36/30\",\"20.43.121.124/30\",\"20.44.17.220/30\",\"20.45.123.236/30\",\"20.47.194.50/32\",\"20.47.194.102/32\",\"20.52.95.254/31\",\"20.52.214.122/32\",\"20.52.214.191/32\",\"20.53.1.68/30\",\"20.53.62.100/31\",\"20.69.8.102/31\",\"20.72.27.152/30\",\"20.85.194.70/32\",\"20.85.194.220/32\",\"20.88.72.40/30\",\"20.90.38.38/31\",\"20.91.100.232/30\",\"20.92.5.114/31\",\"20.99.31.224/30\",\"20.105.215.20/31\",\"20.111.76.188/30\",\"20.116.43.108/31\",\"20.117.193.34/31\",\"20.118.78.36/31\",\"20.119.28.220/31\",\"20.125.4.168/31\",\"20.125.199.59/32\",\"20.135.70.51/32\",\"20.135.74.3/32\",\"20.150.172.228/30\",\"20.164.158.200/30\",\"20.167.131.224/30\",\"20.168.188.36/30\",\"20.170.175.8/30\",\"20.192.238.124/30\",\"20.193.96.28/30\",\"20.193.202.4/30\",\"20.195.87.54/31\",\"20.199.201.66/31\",\"20.199.207.184/30\",\"20.203.88.62/31\",\"20.203.93.200/30\",\"20.204.192.216/31\",\"20.204.199.124/30\",\"20.207.175.176/30\",\"20.208.157.48/30\",\"20.210.69.140/31\",\"20.213.228.120/30\",\"20.215.74.56/30\",\"20.215.154.88/30\",\"20.217.8.56/30\",\"20.217.58.88/30\",\"20.221.192.80/32\",\"20.225.21.250/32\",\"20.225.22.84/32\",\"20.228.34.17/32\",\"20.228.34.19/32\",\"20.240.1.100/31\",\"20.244.66.175/32\",\"20.244.67.158/32\",\"20.252.215.0/30\",\"23.97.93.60/30\",\"23.100.222.168/30\",\"40.64.15.124/30\",\"40.65.72.174/32\",\"40.65.72.253/32\",\"40.69.111.196/30\",\"40.74.102.24/30\",\"40.83.170.64/32\",\"40.83.173.147/32\",\"40.121.67.30/32\",\"48.216.8.24/30\",\"48.219.232.24/30\",\"51.4.160.24/30\",\"51.12.101.172/30\",\"51.12.204.244/30\",\"51.53.40.144/30\",\"51.53.106.88/30\",\"51.53.139.92/30\",\"51.53.186.88/30\",\"51.104.9.100/30\",\"51.107.193.28/30\",\"51.138.160.220/30\",\"51.140.215.184/30\",\"52.147.98.52/30\",\"52.160.97.65/32\",\"52.172.33.114/32\",\"52.172.87.0/30\",\"52.183.31.0/32\",\"52.184.145.166/32\",\"52.240.244.140/30\",\"68.154.136.24/30\",\"68.210.152.24/30\",\"68.211.152.24/30\",\"68.218.131.40/30\",\"68.221.44.44/30\",\"68.221.98.88/30\",\"70.153.176.24/30\",\"74.7.80.24/30\",\"74.7.216.24/30\",\"74.249.127.180/30\",\"98.66.132.188/30\",\"98.67.183.188/30\",\"104.47.217.71/32\",\"104.47.217.87/32\",\"104.47.217.151/32\",\"104.47.240.167/32\",\"104.47.240.215/32\",\"104.211.231.103/32\",\"104.214.165.80/30\",\"108.140.5.168/30\",\"134.138.99.4/30\",\"158.23.10.88/30\",\"158.23.119.232/30\",\"168.61.142.52/30\",\"168.61.239.12/30\",\"172.160.216.24/30\",\"172.164.208.220/30\",\"172.182.164.108/30\",\"172.183.4.112/30\",\"172.187.32.16/30\",\"172.187.67.44/30\",\"172.191.219.248/30\",\"172.201.232.60/30\",\"172.202.80.168/30\",\"172.204.177.28/30\",\"172.209.8.40/30\",\"172.215.202.24/30\",\"191.233.50.4/30\",\"191.233.207.64/26\",\"2603:1000:4::10c/126\",\"2603:1000:4:402::178/125\",\"2603:1000:104:3::1ec/126\",\"2603:1000:104:402::178/125\",\"2603:1010:6:1::10c/126\",\"2603:1010:6:402::178/125\",\"2603:1010:101::10c/126\",\"2603:1010:101:402::178/125\",\"2603:1010:304::10c/126\",\"2603:1010:304:402::178/125\",\"2603:1010:404::10c/126\",\"2603:1010:404:402::178/125\",\"2603:1010:502:400::80/125\",\"2603:1020:5:1::114/126\",\"2603:1020:5:402::178/125\",\"2603:1020:104:800::40/125\",\"2603:1020:206:b::fc/126\",\"2603:1020:206:402::178/125\",\"2603:1020:206:403::78/125\",\"2603:1020:305:402::178/125\",\"2603:1020:405:402::178/125\",\"2603:1020:605::128/126\",\"2603:1020:605:402::178/125\",\"2603:1020:705:3::234/126\",\"2603:1020:705:402::178/125\",\"2603:1020:805:1::130/126\",\"2603:1020:805:402::178/125\",\"2603:1020:905::10c/126\",\"2603:1020:905:402::178/125\",\"2603:1020:a04:1::10c/126\",\"2603:1020:a04:402::178/125\",\"2603:1020:b04:2::5b4/126\",\"2603:1020:b04:402::178/125\",\"2603:1020:c04:1::130/126\",\"2603:1020:c04:402::178/125\",\"2603:1020:d04::10c/126\",\"2603:1020:d04:402::178/125\",\"2603:1020:e04:1::128/126\",\"2603:1020:e04:402::178/125\",\"2603:1020:f04::10c/126\",\"2603:1020:f04:402::178/125\",\"2603:1020:1004::130/126\",\"2603:1020:1004:800::f8/125\",\"2603:1020:1104:1::79c/126\",\"2603:1020:1104:400::178/125\",\"2603:1020:1204:3::56c/126\",\"2603:1020:1204:400::c0/125\",\"2603:1020:1302:2::5a0/126\",\"2603:1020:1302:400::180/125\",\"2603:1020:1403:1::2a8/126\",\"2603:1020:1403:400::100/125\",\"2603:1020:1502:400::40/125\",\"2603:1020:1602:400::1c8/125\",\"2603:1030:f:4::39c/126\",\"2603:1030:f:400::978/125\",\"2603:1030:10:1::118/126\",\"2603:1030:10:402::178/125\",\"2603:1030:104:2::ec/126\",\"2603:1030:104:402::178/125\",\"2603:1030:107:1::3b0/126\",\"2603:1030:107:400::f0/125\",\"2603:1030:210:1::118/126\",\"2603:1030:210:402::178/125\",\"2603:1030:302:1::90/126\",\"2603:1030:40b:1::114/126\",\"2603:1030:40b:400::978/125\",\"2603:1030:40c:1::118/126\",\"2603:1030:40c:402::178/125\",\"2603:1030:504:1::10c/126\",\"2603:1030:504:802::f8/125\",\"2603:1030:608::130/126\",\"2603:1030:608:402::178/125\",\"2603:1030:702:1::2a8/126\",\"2603:1030:702:400::100/125\",\"2603:1030:807:1::138/126\",\"2603:1030:807:402::178/125\",\"2603:1030:902:400::40/125\",\"2603:1030:a07::138/126\",\"2603:1030:a07:402::8f8/125\",\"2603:1030:b04:1::4cc/126\",\"2603:1030:b04:402::178/125\",\"2603:1030:b04:800::40/125\",\"2603:1030:c06:c::194/126\",\"2603:1030:c06:400::978/125\",\"2603:1030:f05:1::120/126\",\"2603:1030:f05:402::178/125\",\"2603:1030:1005::10c/126\",\"2603:1030:1005:402::178/125\",\"2603:1030:1102:400::40/125\",\"2603:1030:1202:400::40/125\",\"2603:1030:1302:400::40/125\",\"2603:1030:1402:400::40/125\",\"2603:1030:1502:400::40/125\",\"2603:1040:5:3::5fc/126\",\"2603:1040:5:402::178/125\",\"2603:1040:207::114/126\",\"2603:1040:207:402::178/125\",\"2603:1040:407:1::114/126\",\"2603:1040:407:402::178/125\",\"2603:1040:606::10c/126\",\"2603:1040:606:402::178/125\",\"2603:1040:806::10c/126\",\"2603:1040:806:402::178/125\",\"2603:1040:904:1::114/126\",\"2603:1040:904:402::178/125\",\"2603:1040:a06:1::128/126\",\"2603:1040:a06:402::178/125\",\"2603:1040:b04::10c/126\",\"2603:1040:b04:402::178/125\",\"2603:1040:c06::10c/126\",\"2603:1040:c06:402::178/125\",\"2603:1040:d04::10c/126\",\"2603:1040:d04:800::f8/125\",\"2603:1040:e05:5::4ac/126\",\"2603:1040:e05:402::180/125\",\"2603:1040:f05:1::10c/126\",\"2603:1040:f05:402::178/125\",\"2603:1040:1002:5::30c/126\",\"2603:1040:1002:400::180/125\",\"2603:1040:1104::10c/126\",\"2603:1040:1104:400::178/125\",\"2603:1040:1202:1::1a4/126\",\"2603:1040:1202:400::180/125\",\"2603:1040:1302:1::22c/126\",\"2603:1040:1302:400::180/125\",\"2603:1040:1402:2::520/126\",\"2603:1040:1402:400::180/125\",\"2603:1040:1503:1::1c4/126\",\"2603:1040:1503:400::180/125\",\"2603:1040:1602:1::2e8/126\",\"2603:1040:1602:400::40/125\",\"2603:1040:1702:400::40/125\",\"2603:1040:1802:400::40/125\",\"2603:1050:6:2::6f0/126\",\"2603:1050:6:402::178/125\",\"2603:1050:301:400::40/125\",\"2603:1050:403::10c/126\",\"2603:1050:403:400::1f8/125\"]"
        },
        "datasource": {
          "type": "marcusolsson-json-datasource",
          "uid": "cefifux5qp4aoc"
        },
        "definition": "$.values[*].properties.addressPrefixes",
        "hide": 0,
        "includeAll": false,
        "label": "IP ranges",
        "multi": false,
        "name": "IPranges",
        "options": [],
        "query": {
          "azureLogAnalytics": {
            "query": "",
            "resources": []
          },
          "cacheDurationSeconds": 300,
          "experimentalVariableTextField": "text",
          "experimentalVariableValueField": "value",
          "fields": [
            {
              "jsonPath": "$.values[*].properties.addressPrefixes",
              "name": "value",
              "type": "string"
            },
            {
              "jsonPath": "$.values[*].name",
              "language": "jsonpath",
              "name": "text"
            }
          ],
          "method": "GET",
          "queryParams": "",
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "3e78e84b-6750-44b9-9d57-d9bba935237a",
          "urlPath": ""
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Flow Logs",
  "uid": "feeft4286lkaod",
  "version": 19,
  "weekStart": ""
}
